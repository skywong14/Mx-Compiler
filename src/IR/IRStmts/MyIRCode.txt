; 声明外部函数malloc
declare ptr @malloc(i32)

; 声明LLVM的内置memset函数，用于初始化内存为0
declare void @llvm.memset.p0.p0.i32(ptr, i32, i32, i1)

; 定义输入参数
define ptr @allocateArray(i32 %arraySize, i32 %elementSize) {
entry:
    ; 计算需要分配的总字节数：4字节存储数组大小 + arraySize * elementSize
    ; 加上1是为了存储数组大小的位置
    %totalSize = add i32 %arraySize, 1            ; 计算需要的总大小（包括size的4字节）
    %totalBytes = mul i32 %totalSize, %elementSize ; 计算总的字节数

    ; 调用malloc分配内存
    %ptr = call ptr @malloc(i32 %totalBytes)

    ; 初始化为0
    call void @llvm.memset.p0.p0.i32(ptr %ptr, i32 0, i32 %totalBytes, i1 false)

    ; 将数组大小存储在前4个字节
    %sizePtr = bitcast ptr %ptr to ptr                  ; 将指针转换为指向i32的指针类型以存储大小
    store i32 %arraySize, ptr %sizePtr                 ; 将数组大小存储到数组头部

    ; 计算指向第一个元素的指针（跳过存储size的4个字节）
    %elementPtr = getelementptr i32, ptr %sizePtr, i32 1

    ; 返回指向第一个元素的指针
    ret ptr %elementPtr
}


